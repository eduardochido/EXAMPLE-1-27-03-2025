-- Eliminar las tablas si ya existen
IF OBJECT_ID('ventas', 'U') IS NOT NULL DROP TABLE ventas;
IF OBJECT_ID('almacen', 'U') IS NOT NULL DROP TABLE almacen;
IF OBJECT_ID('estimado_ventas', 'U') IS NOT NULL DROP TABLE estimado_ventas;
IF OBJECT_ID('productos', 'U') IS NOT NULL DROP TABLE productos;
IF OBJECT_ID('usuarios', 'U') IS NOT NULL DROP TABLE usuarios;

-- Crear la tabla de usuarios
CREATE TABLE usuarios (
    id_usuario INT PRIMARY KEY IDENTITY(1,1),
    nombre VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    contraseña VARCHAR(255) NOT NULL,
    rol VARCHAR(50) NOT NULL
);

-- Crear la tabla de productos
CREATE TABLE productos (
    id_producto INT PRIMARY KEY IDENTITY(1,1),
    nombre VARCHAR(255) NOT NULL,
    descripcion TEXT,
    precio DECIMAL(10, 2) NOT NULL,
    stock INT NOT NULL,
    categoria VARCHAR(100)
);

-- Crear la tabla de ventas
CREATE TABLE ventas (
    id_venta INT PRIMARY KEY IDENTITY(1,1),
    fecha DATE NOT NULL,
    hora TIME NOT NULL,
    id_cliente INT,
    id_producto INT,
    cantidad INT NOT NULL,
    precio DECIMAL(10, 2) NOT NULL,
    iva DECIMAL(5, 2) NOT NULL,
    FOREIGN KEY (id_cliente) REFERENCES usuarios(id_usuario),
    FOREIGN KEY (id_producto) REFERENCES productos(id_producto)
);

-- Crear la tabla de almacen
CREATE TABLE almacen (
    id_almacen INT PRIMARY KEY IDENTITY(1,1),
    id_producto INT,
    cantidad INT NOT NULL,
    ubicacion VARCHAR(255),
    FOREIGN KEY (id_producto) REFERENCES productos(id_producto)
);

-- Crear la tabla de estimado_ventas
CREATE TABLE estimado_ventas (
    id_estimado INT PRIMARY KEY IDENTITY(1,1),
    id_producto INT,
    mes INT NOT NULL,
    año INT NOT NULL,
    cantidad_estimado INT NOT NULL,
    FOREIGN KEY (id_producto) REFERENCES productos(id_producto)
);

-- Insertar datos de ejemplo en la tabla de usuarios
INSERT INTO usuarios (nombre, email, contraseña, rol)
VALUES ('Juan Pérez', 'juan@correo.com', 'password123', 'vendedor'),
       ('Ana Gómez', 'ana@correo.com', 'password456', 'admin');

-- Insertar datos de ejemplo en la tabla de productos con stock aumentado
INSERT INTO productos (nombre, descripcion, precio, stock, categoria)
VALUES ('Laptop', 'Laptop de alta gama', 1500.00, 15000, 'Tecnología'),
       ('Mouse', 'Mouse inalámbrico', 25.99, 15000, 'Accesorios');

-- Insertar datos de ejemplo en la tabla de ventas
INSERT INTO ventas (fecha, hora, id_cliente, id_producto, cantidad, precio, iva)
VALUES ('2025-05-20', '10:30:00', 1, 1, 2, 1500.00, 21.00),
       ('2025-05-20', '11:00:00', 2, 2, 1, 25.99, 21.00);

-- Insertar datos de ejemplo en la tabla de almacen
INSERT INTO almacen (id_producto, cantidad, ubicacion)
VALUES (1, 15000, 'A1'),
       (2, 15000, 'B2');

-- Insertar datos de ejemplo en la tabla de estimado_ventas
INSERT INTO estimado_ventas (id_producto, mes, año, cantidad_estimado)
VALUES (1, 5, 2025, 20),
       (2, 5, 2025, 100);

-- Insertar 5000 registros en ventas, actualizar stock y registrar movimiento si hay stock suficiente
DECLARE @i INT = 1;
DECLARE @cliente INT;
DECLARE @producto INT;
DECLARE @cantidad INT;
DECLARE @precio DECIMAL(10,2);
DECLARE @iva DECIMAL(5,2);
DECLARE @fecha DATE;
DECLARE @hora TIME;
DECLARE @stock_actual INT;

WHILE @i <= 5000
BEGIN
    SET @cliente = CASE WHEN @i % 2 = 0 THEN 1 ELSE 2 END;
    SET @producto = CASE WHEN @i % 2 = 0 THEN 1 ELSE 2 END;
    SET @cantidad = (@i % 5) + 1;
    SET @precio = CASE WHEN @producto = 1 THEN 1500.00 ELSE 25.99 END;
    SET @iva = @precio * 0.21;
    SET @fecha = DATEADD(DAY, @i % 140, '2025-01-01');
    SET @hora = CAST(DATEADD(MINUTE, (@i % 600), '08:00:00') AS TIME);

    -- Verificar stock actual
    SELECT @stock_actual = stock FROM productos WHERE id_producto = @producto;

    IF @stock_actual >= @cantidad
    BEGIN
        -- Insertar en ventas
        INSERT INTO ventas (fecha, hora, id_cliente, id_producto, cantidad, precio, iva)
        VALUES (@fecha, @hora, @cliente, @producto, @cantidad, @precio, @iva);

        -- Actualizar stock en productos
        UPDATE productos
        SET stock = stock - @cantidad
        WHERE id_producto = @producto;

        -- Registrar salida en almacen
        INSERT INTO almacen (id_producto, cantidad, ubicacion)
        VALUES (@producto, -@cantidad, 'Salida por venta');
    END;

    SET @i = @i + 1;
END;

-- Tabla de ventas (debería tener 5002 registros si se insertaron todos)
SELECT * FROM ventas;

-- Mostrar total de registros en ventas
SELECT COUNT(*) AS total_ventas FROM ventas;
